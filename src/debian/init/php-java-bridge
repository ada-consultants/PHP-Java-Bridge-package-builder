#! /bin/sh
### BEGIN INIT INFO
# Provides:          php-java-bridge
# Default-Start:     
# Default-Stop:      
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Short-Description: Used to start a PHP/Java Bridge server
### END INIT INFO
#
# Author:	Sylvain Filteau <sfilteau@ada-consult.com>.
#
# Version:	@(#)php-java-bridge  2.0  18-Nov-2011  sfilteau@ada-consult.com
#

set -e

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="PHP/Java Bridge"
NAME=php-java-bridge
DAEMON=/usr/bin/php-java-bridge
DEAMON_ARGS="/etc/php-java-bridge/php-java-bridge.conf"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Functions that kills the php-java-bridge process tree
killpid() {
	pidlist=` ps -eo ppid,pid | sed 1d | awk '{ if( $1!= $2 ) print $1"\t"$2 }' | sort | uniq `

	kill "$1"

	for subpid in ` echo "$pidlist" | awk -F"\t" '{ if( $1=='"$1"' ) print $2 }' `
	do
		killpid "$subpid" 
	done
}

# Gracefully exit if the package has been removed.
test -x $DAEMON || exit 0

#
#	Function that starts the daemon/service.
#
d_start() {
	start-stop-daemon --start -mb --pidfile $PIDFILE \
		--exec $DAEMON -- $DEAMON_ARGS > /dev/null 2>&1\
		|| echo -n " already running"
}

#
#	Function that stops the daemon/service.
#
d_stop() {
	
	if [ -f "$PIDFILE" ]; then
		killpid `cat $PIDFILE`
		rm $PIDFILE
	else
		echo -n " not running"
	fi

}

case "$1" in
  start)
	echo -n "Starting $DESC: $NAME"
	d_start
	echo "."
	;;
  stop)
	echo -n "Stopping $DESC: $NAME"
	d_stop
	echo "."
	;;
  restart|force-reload)
	#
	#	If the "reload" option is implemented, move the "force-reload"
	#	option to the "reload" entry above. If not, "force-reload" is
	#	just the same as "restart".
	#
	echo -n "Restarting $DESC: $NAME"
	d_stop
	# One second might not be time enough for a daemon to stop, 
	# if this happens, d_start will fail (and dpkg will break if 
	# the package is being upgraded). Change the timeout if needed
	# be, or change d_stop to have start-stop-daemon use --retry. 
	# Notice that using --retry slows down the shutdown process somewhat.
	sleep 1
	d_start
	echo "."
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload}" >&2
	exit 3
	;;
esac

exit 0
